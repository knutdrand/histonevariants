rule all_repeat_fpkms:
    input:
        expand("repeat_fpkm/V2-2019-{name}/{repeat}.txt", name=config["samples"], repeat=config["repeats"])

rule all_repeat_fragments:
    input:
        expand("repeat_fragments_smallremoved_unique_w_strand/V2-2019-{name}.bed", 
               name=config["samples"])
        
rule repeat_fragments:
    input:
        "filtered_alignments/{sample}.bam"
    output:
        temp("repeat_fragments/{sample}.bed")
    shell:
        "/usr/local/bin/macs2 randsample -i {input} -f BAMPE -p 100 -o {output}"

rule remove_small_fragments:
    input:
        "{folder}/{name}.bed"
    output:
        temp("{folder}_smallremoved/{name}.bed")
    shell:
        "awk '{{if (($3-$2)>50) print}}' {input} > {output}"

rule repeat_coverage:
    input:
        "repeats/{repeat}.bed.gz",
        "repeat_fragments_smallremoved_unique/{name}.bed"
    output:
        temp("repeat_coverage/{name}/{repeat}.bed")
    shell:
        "bedtools coverage -a {input[0]} -b {input[1]} > {output}"

rule analyze_repeat:
    input:
        "repeat_coverage/{name}/{repeat}.bed",
        "repeat_fragments_smallremoved_unique/{name}.bed"
    output:
        "repeat_fpkm/{name}/{repeat}.txt"
    shell:
         "echo $(awk '{{t+=$7;d+=$9}}END{{print t, d}}' {input[0]}) $(wc -l {input[1]})| awk '{{print $1/$2/$3*1000000000}}'>{output}"

rule repeat_enrichment:
    input:
        "repeat_fpkm/V2-{source}-{index}-{stage}-{name}/{repeat}.txt",
        "repeat_fpkm/V2-{source}-{input_index}-INP-{stage}/{repeat}.txt"
    output:
        "repeat_enrichment/V2-{source}-{index}-{stage}-{name}_v{input_index}/{repeat}.txt",
    wildcard_constraints:
        index="\d+",
        input_index="\d+",
        stage=".*?"
    shell:
        "paste {input} | awk '{{print $1/$2}}' > {output}"

rule summarize_rows:
    input:
        expand("repeat_enrichment/V2-{{source}}-{{name}}/{repeat}.txt", repeat=config["repeats"])
    output:
        "repeat_enrichment/V2-{source}-{name}/ALL.csv"
    shell:
        "paste {input} > {output}"

rule summarize_table:
    input:
        expand("repeat_enrichment/V2-2019-{name}/ALL.csv",
               name=[name+"_v"+config["inputs"][name.split("-")[1]].split("-")[0] for name in config["chips"]])
    output:
        "repeat_enrichment/ALL.csv"
    shell:
        "cat $(echo '{input}') {input} > {output}"
rule gzip:
    input:
        "{filename}"
    output:
        "{filename}.gz"
    shell:
        "gzip {input}"

rule add_strand:
    input:
        "repeat_fragments_smallremoved_unique/{name}.bed"
    output:
        "repeat_fragments_smallremoved_unique_w_strand/{name}.bed.gz"
    shell:
        """zcat {input} | awk '{{OFS="\t"}}{{print $1,$2,$3,".",".","+"}}' > {output}"""

rule add_header:
    input:
        expand("repeat_enrichment/V2-2019-{name}/ALL.csv",
               name=[name+"_v"+config["inputs"][name.split("-")[1]].split("-")[0] for name in config["chips"]])
    output:
        "repeat_enrichment/ALL.csv"
    shell:
        "cat $(echo '{input}') {input} > {output}"

